TreeHelper{
    Program program;

    run(node n)
    {
        program = new program();
        program.run(n);
    }
}

Program 
{
    List<Class> classes;

    run(node n)
    {
        foreach(var nn in n.children)
        {
            Class class = new class();
            classes.Add(class);
            class.Parent = this;
            class.Run(nn);
        }
    }
}

Class
{
    List<staticShit> ss;

    string name;

    Run(node n)
    {
        name = n.children[0];

        foreach()
    }
}

VarDecl
{
    Type type;
    Name;
    ?? n;

    Class parent;

    //node with type = VARDECL
    run (node n)// есть родитель, есть тип
    {
        Name = n.Children[0];

        n = new ? ();
        n.run(n.children[1]);
    } 
}

? 
{
    ? child1;
    ? child2;

    string sing;

    run(node n)
    {

        add
        substr
        mut
        del

        newExpr
        funccall


        /*
        //u 2

        sing = n.data;

        child1 = new
        child2 = new

        child1.run(n.Children[0])
        child2.run(n.Children[1])

        switch()
        // u 1 
        // u
        */  

    }
}